/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

/// IssueLink : Details of a link between issues.

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IssueLink {
    /// The ID of the issue link.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The URL of the issue link.
    #[serde(rename = "self", skip_serializing_if = "Option::is_none")]
    pub _self: Option<String>,
    /// The type of link between the issues.
    #[serde(rename = "type")]
    pub _type: crate::gen::models::IssueLinkType,
    /// The issue the link joins to.
    #[serde(rename = "inwardIssue")]
    pub inward_issue: crate::gen::models::LinkedIssue,
    /// The issue the link originates from.
    #[serde(rename = "outwardIssue")]
    pub outward_issue: crate::gen::models::LinkedIssue,
}

impl IssueLink {
    /// Details of a link between issues.
    pub fn new(
        _type: crate::gen::models::IssueLinkType,
        inward_issue: crate::gen::models::LinkedIssue,
        outward_issue: crate::gen::models::LinkedIssue,
    ) -> IssueLink {
        IssueLink {
            id: None,
            _self: None,
            _type,
            inward_issue,
            outward_issue,
        }
    }
}
