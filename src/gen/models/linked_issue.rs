/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

/// LinkedIssue : The ID or key of a linked issue.

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct LinkedIssue {
    /// The ID of an issue. Required if `key` isn't provided.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The key of an issue. Required if `id` isn't provided.
    #[serde(rename = "key", skip_serializing_if = "Option::is_none")]
    pub key: Option<String>,
    /// The URL of the issue.
    #[serde(rename = "self", skip_serializing_if = "Option::is_none")]
    pub _self: Option<String>,
    /// The fields associated with the issue.
    #[serde(rename = "fields", skip_serializing_if = "Option::is_none")]
    pub fields: Option<crate::gen::models::Fields>,
}

impl LinkedIssue {
    /// The ID or key of a linked issue.
    pub fn new() -> LinkedIssue {
        LinkedIssue {
            id: None,
            key: None,
            _self: None,
            fields: None,
        }
    }
}
